version: "3.9"
services:
  taskflow-react:
    #image: localhost:5000/taskflow-prod:latest
    image: taskflow-prod:latest
    volumes:
      - ../../nodes/react:/app/nodes/react
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-react.sh"]
    environment:
      - REACT_APP_TASKHUB_URL=http://localhost:5001/hub
      - REACT_APP_LABEL=T@skFlow
    depends_on:
      - taskflow-hub
    networks:
      - web-proxy
  taskflow-processor-consumer:
    #image: localhost:5000/taskflow-prod:latest
    image: taskflow-prod:latest
    volumes:
      - ../../nodes/rxjs:/app/nodes/rxjs
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-processor-consumer.sh"]
    environment:
      - TASKHUB_URL=http://localhost:5001/hub
    networks:
      - web-proxy
    depends_on:
      - taskflow-hub
  taskflow-hub-consumer:
    image: taskflow-prod:latest
    volumes:
      - ../../nodes/rxjs:/app/nodes/rxjs
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-hub-consumer.sh"]
    environment:
      - TASKHUB_URL=http://localhost:5001/hub
    networks:
      - web-proxy
    depends_on:
      - taskflow-hub
  taskflow-hub-coprocessor:
    image: taskflow-prod:latest
    volumes:
      - ../../nodes/rxjs:/app/nodes/rxjs
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-rxjs-hub-coprocessor.sh"]
    environment:
      - TASKHUB_URL=http://localhost:5001/hub
    networks:
      - web-proxy
    depends_on:
      - taskflow-hub
  taskflow-hub:
    #image: localhost:5000/taskflow-prod:latest
    image: taskflow-prod:latest
    volumes:
      - ../../nodes/hub:/app/nodes/hub
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-hub.sh"]
    networks:
      - web-proxy
    depends_on:
      - mongodb
      - redis-stack-svc
  mongodb:
    image: mongodb/mongodb-community-server:latest
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - mongodb-data:/data/db
    networks:
      - web-proxy
  redis-stack-svc:
    image: redis/redis-stack:latest
    # use REDIS_ARGS for redis-stack-server instead of command arguments
    # Writes to disk every 10 minutes if at least 1 change.
    environment:
      - REDIS_ARGS=--save 600 1
    volumes:
      - redis-data:/data
    networks:
      - web-proxy
  weaviate:
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8080'
    - --scheme
    - http
    image: semitechnologies/weaviate:1.21.2
    volumes:
    - weaviate-data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-cohere,text2vec-huggingface,text2vec-palm,text2vec-openai,generative-openai,generative-cohere,generative-palm,ref2vec-centroid,reranker-cohere,qna-openai'
      CLUSTER_HOSTNAME: 'weaviate1'
    networks:
      - web-proxy
  unstructured:
    image: downloads.unstructured.io/unstructured-io/unstructured:latest
    networks:
      - web-proxy

volumes:
  mongodb-data:
  redis-data:
  weaviate-data:

networks:
  web-proxy:
    external: true

