version: "3.9"
services:
  taskflow-react:
    #image: localhost:5000/taskflow-prod:latest
    image: taskflow-prod:latest
    volumes:
      - ../../processor/react:/app/processor/react
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-react.sh"]
    environment:
      - REACT_APP_TASKHUB_URL=http://localhost:5001/hub
      - REACT_APP_LABEL=T@skFlow
    depends_on:
      - taskflow-hub
    networks:
      - web-proxy
  taskflow-nodejs:
    #image: localhost:5000/taskflow-prod:latest
    image: taskflow-prod:latest
    volumes:
      - ../../processor/nodejs:/app/processor/nodejs
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-nodejs.sh"]
    environment:
      - TASKHUB_URL=http://localhost:5001/hub
    networks:
      - web-proxy
    depends_on:
      - taskflow-hub
  taskflow-rxjs:
    image: taskflow-prod:latest
    volumes:
      - ../../processor/rxjs:/app/processor/rxjs
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-rxjs.sh"]
    environment:
      - TASKHUB_URL=http://localhost:5001/hub
    networks:
      - web-proxy
    depends_on:
      - taskflow-hub
  taskflow-rxjscopro:
    image: taskflow-prod:latest
    volumes:
      - ../../processor/rxjs:/app/processor/rxjs
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-rxjscopro.sh"]
    environment:
      - TASKHUB_URL=http://localhost:5001/hub
    networks:
      - web-proxy
    depends_on:
      - taskflow-hub
  taskflow-hub:
    #image: localhost:5000/taskflow-prod:latest
    image: taskflow-prod:latest
    volumes:
      - ../../hub:/app/hub
      - ../../shared:/app/shared
    entrypoint: ["/entrypoint-hub.sh"]
    networks:
      - web-proxy
  mongodb:
    image: mongodb/mongodb-community-server:latest
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - mongodbdata:/data/db
    networks:
      - web-proxy
  redis-stack-svc:
    image: redis/redis-stack:latest
    # use REDIS_ARGS for redis-stack-server instead of command arguments
    # Writes to disk every 10 minutes if at least 1 change.
    environment:
      - REDIS_ARGS=--save 600 1
    volumes:
      - my-redis-data:/data
    networks:
      - web-proxy

volumes:
  mongodbdata:
  my-redis-data:

networks:
  web-proxy:
    external: true

